apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 34
    buildToolsVersion "30.0.3"
    namespace 'com.bm.library' // Match this with your AndroidManifest.xml package

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 5
        versionName "1.4.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.annotation:annotation:1.9.1'
    implementation 'androidx.core:core:1.12.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}

// Task for sources JAR
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Task for Javadoc
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// Task for Javadoc JAR
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // Include the release AAR artifact
            artifact("$buildDir/outputs/aar/${project.name}-release.aar")

            // Include the sources JAR
            artifact sourcesJar

            // Optionally include Javadoc JAR
            artifact javadocJar

            groupId = 'com.bm'
            artifactId = 'photoview'
            version = '1.4.1'

            pom.withXml {
                asNode().appendNode('description', 'An advanced photo view library for Android.')
                asNode().appendNode('name', 'PhotoView')
                asNode().appendNode('url', 'https://github.com/bm-x/PhotoView')

                def licensesNode = asNode().appendNode('licenses')
                def licenseNode = licensesNode.appendNode('license')
                licenseNode.appendNode('name', 'MIT License')
                licenseNode.appendNode('url', 'https://opensource.org/licenses/MIT')

                def developersNode = asNode().appendNode('developers')
                def developerNode = developersNode.appendNode('developer')
                developerNode.appendNode('id', 'bm-x')
                developerNode.appendNode('name', 'BM-X')
                developerNode.appendNode('email', 'developer@example.com')

                def scmNode = asNode().appendNode('scm')
                scmNode.appendNode('connection', 'scm:git:git://github.com/bm-x/PhotoView.git')
                scmNode.appendNode('developerConnection', 'scm:git:ssh://git@github.com:bm-x/PhotoView.git')
                scmNode.appendNode('url', 'https://github.com/bm-x/PhotoView')
            }
        }
    }

    repositories {
        maven {
            url = uri("$buildDir/repo")
        }
    }
}
